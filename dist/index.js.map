{
  "version": 3,
  "sources": ["../lib/rational_p12q12.js", "../lib/rational_p24q24.js", "../lib/rational_p4infq4inf.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MODULES //\n\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\n\n\n// MAIN //\n\n/**\n* Evaluates a rational function (i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\)).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -1.109328031539917;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = float64ToFloat32(-1.109328031539917 + float64ToFloat32(x * float64ToFloat32(-3.8310675621032715 + float64ToFloat32(x * float64ToFloat32(-3.370384931564331 + float64ToFloat32(x * float64ToFloat32(0.2808057367801666 + float64ToFloat32(x * float64ToFloat32(1.6638069152832031 + float64ToFloat32(x * 0.6446838974952698)))))))))); // eslint-disable-line max-len\n\t\ts2 = float64ToFloat32(1.0 + float64ToFloat32(x * float64ToFloat32(3.4535388946533203 + float64ToFloat32(x * float64ToFloat32(4.52089262008667 + float64ToFloat32(x * float64ToFloat32(2.7012734413146973 + float64ToFloat32(x * float64ToFloat32(0.6446880102157593 + float64ToFloat32(x * -2.031451629136427e-7)))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = float64ToFloat32( 1.0 / x );\n\t\ts1 = float64ToFloat32(0.6446838974952698 + float64ToFloat32(x * float64ToFloat32(1.6638069152832031 + float64ToFloat32(x * float64ToFloat32(0.2808057367801666 + float64ToFloat32(x * float64ToFloat32(-3.370384931564331 + float64ToFloat32(x * float64ToFloat32(-3.8310675621032715 + float64ToFloat32(x * -1.109328031539917)))))))))); // eslint-disable-line max-len\n\t\ts2 = float64ToFloat32(-2.031451629136427e-7 + float64ToFloat32(x * float64ToFloat32(0.6446880102157593 + float64ToFloat32(x * float64ToFloat32(2.7012734413146973 + float64ToFloat32(x * float64ToFloat32(4.52089262008667 + float64ToFloat32(x * float64ToFloat32(3.4535388946533203 + float64ToFloat32(x * 1.0)))))))))); // eslint-disable-line max-len\n\t}\n\treturn float64ToFloat32( s1 / s2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MODULES //\n\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\n\n\n// MAIN //\n\n/**\n* Evaluates a rational function (i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\)).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn -1.3803835408054965e-8;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = float64ToFloat32(-1.3803835408054965e-8 + float64ToFloat32(x * float64ToFloat32(0.5000004768371582 + float64ToFloat32(x * float64ToFloat32(1.6077979803085327 + float64ToFloat32(x * float64ToFloat32(2.5645434856414795 + float64ToFloat32(x * float64ToFloat32(2.0534873008728027 + float64ToFloat32(x * 0.7456697821617126)))))))))); // eslint-disable-line max-len\n\t\ts2 = float64ToFloat32(1.0 + float64ToFloat32(x * float64ToFloat32(2.8822786808013916 + float64ToFloat32(x * float64ToFloat32(4.168166160583496 + float64ToFloat32(x * float64ToFloat32(2.7853527069091797 + float64ToFloat32(x * float64ToFloat32(0.7496767044067383 + float64ToFloat32(x * -0.0005706911324523389)))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = float64ToFloat32( 1.0 / x );\n\t\ts1 = float64ToFloat32(0.7456697821617126 + float64ToFloat32(x * float64ToFloat32(2.0534873008728027 + float64ToFloat32(x * float64ToFloat32(2.5645434856414795 + float64ToFloat32(x * float64ToFloat32(1.6077979803085327 + float64ToFloat32(x * float64ToFloat32(0.5000004768371582 + float64ToFloat32(x * -1.3803835408054965e-8)))))))))); // eslint-disable-line max-len\n\t\ts2 = float64ToFloat32(-0.0005706911324523389 + float64ToFloat32(x * float64ToFloat32(0.7496767044067383 + float64ToFloat32(x * float64ToFloat32(2.7853527069091797 + float64ToFloat32(x * float64ToFloat32(4.168166160583496 + float64ToFloat32(x * float64ToFloat32(2.8822786808013916 + float64ToFloat32(x * 1.0)))))))))); // eslint-disable-line max-len\n\t}\n\treturn float64ToFloat32( s1 / s2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* This is a generated file. Do not edit directly. */\n'use strict';\n\n// MODULES //\n\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\n\n\n// MAIN //\n\n/**\n* Evaluates a rational function (i.e., the ratio of two polynomials described by the coefficients stored in \\\\(P\\\\) and \\\\(Q\\\\)).\n*\n* ## Notes\n*\n* -   Coefficients should be sorted in ascending degree.\n* -   The implementation uses [Horner's rule][horners-method] for efficient computation.\n*\n* [horners-method]: https://en.wikipedia.org/wiki/Horner%27s_method\n*\n* @private\n* @param {number} x - value at which to evaluate the rational function\n* @returns {number} evaluated rational function\n*/\nfunction evalrational( x ) {\n\tvar ax;\n\tvar s1;\n\tvar s2;\n\tif ( x === 0.0 ) {\n\t\treturn 6.8947580279632365e-18;\n\t}\n\tif ( x < 0.0 ) {\n\t\tax = -x;\n\t} else {\n\t\tax = x;\n\t}\n\tif ( ax <= 1.0 ) {\n\t\ts1 = float64ToFloat32(6.8947580279632365e-18 + float64ToFloat32(x * float64ToFloat32(0.5 + float64ToFloat32(x * float64ToFloat32(1.0177274942398071 + float64ToFloat32(x * float64ToFloat32(2.498208522796631 + float64ToFloat32(x * float64ToFloat32(2.192122220993042 + float64ToFloat32(x * float64ToFloat32(1.5897035598754883 + float64ToFloat32(x * 0.40154388546943665)))))))))))); // eslint-disable-line max-len\n\t\ts2 = float64ToFloat32(1.0 + float64ToFloat32(x * float64ToFloat32(1.7021214962005615 + float64ToFloat32(x * float64ToFloat32(4.429043292999268 + float64ToFloat32(x * float64ToFloat32(2.9745631217956543 + float64ToFloat32(x * float64ToFloat32(2.301361560821533 + float64ToFloat32(x * float64ToFloat32(0.2836039960384369 + float64ToFloat32(x * 0.022892987355589867)))))))))))); // eslint-disable-line max-len\n\t} else {\n\t\tx = float64ToFloat32( 1.0 / x );\n\t\ts1 = float64ToFloat32(0.40154388546943665 + float64ToFloat32(x * float64ToFloat32(1.5897035598754883 + float64ToFloat32(x * float64ToFloat32(2.192122220993042 + float64ToFloat32(x * float64ToFloat32(2.498208522796631 + float64ToFloat32(x * float64ToFloat32(1.0177274942398071 + float64ToFloat32(x * float64ToFloat32(0.5 + float64ToFloat32(x * 6.8947580279632365e-18)))))))))))); // eslint-disable-line max-len\n\t\ts2 = float64ToFloat32(0.022892987355589867 + float64ToFloat32(x * float64ToFloat32(0.2836039960384369 + float64ToFloat32(x * float64ToFloat32(2.301361560821533 + float64ToFloat32(x * float64ToFloat32(2.9745631217956543 + float64ToFloat32(x * float64ToFloat32(4.429043292999268 + float64ToFloat32(x * float64ToFloat32(1.7021214962005615 + float64ToFloat32(x * 1.0)))))))))))); // eslint-disable-line max-len\n\t}\n\treturn float64ToFloat32( s1 / s2 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = evalrational;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C++ code and copyright notice are from the [Boost library]{@link http://www.boost.org/doc/libs/1_88_0/boost/math/special_functions/trigamma.hpp}. The implementation follows the original but has been reformatted and modified for JavaScript.\n*\n* ```text\n* (C) Copyright John Maddock 2006.\n*\n* Use, modification and distribution are subject to the\n* Boost Software License, Version 1.0. (See accompanying file\n* LICENSE or copy at http://www.boost.org/LICENSE_1_0.txt)\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar f32 = require( '@stdlib/number-float64-base-to-float32' );\nvar sinpif = require( '@stdlib/math-base-special-sinpif' );\nvar absf = require( '@stdlib/math-base-special-absf' );\nvar floorf = require( '@stdlib/math-base-special-floorf' );\nvar PI_SQUARED = require( '@stdlib/constants-float32-pi-squared' );\nvar rateval12 = require( './rational_p12q12.js' );\nvar rateval24 = require( './rational_p24q24.js' );\nvar rateval4INF = require( './rational_p4infq4inf.js' );\n\n\n// VARIABLES //\n\nvar YOFFSET12 = f32( 2.1093254089355469 );\nvar ZERO = f32( 0.0 );\nvar ONE = f32( 1.0 );\nvar TWO = f32( 2.0 );\nvar FOUR = f32( 4.0 );\n\n\n// MAIN //\n\n/**\n* Evaluates the trigamma function for a single-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = trigammaf( -2.5 );\n* // returns ~9.539\n*\n* @example\n* var v = trigammaf( 1.0 );\n* // returns ~1.645\n*\n* @example\n* var v = trigammaf( 10.0 );\n* // returns ~0.105\n*\n* @example\n* var v = trigammaf( NaN );\n* // returns NaN\n*\n* @example\n* var v = trigammaf( -1.0 );\n* // returns NaN\n*/\nfunction trigammaf( x ) {\n\tvar result;\n\tvar s;\n\tvar y;\n\tvar z;\n\n\tx = f32( x );\n\tresult = ZERO;\n\n\t// Check for negative arguments and use reflection:\n\tif ( x <= ZERO ) {\n\t\tif ( floorf( x ) === x ) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// Reflect:\n\t\tz = f32( ONE - x );\n\t\tif ( z < ONE ) {\n\t\t\tresult = f32( ONE / f32( z*z ) );\n\t\t\tz = f32( ONE + z );\n\t\t}\n\t\ts = ( absf( x ) < absf( z ) ) ? sinpif( x ) : sinpif( z );\n\t\treturn f32( f32( result - trigammaf( z ) ) + f32( PI_SQUARED / f32( s*s ) ) );\n\t}\n\tif ( x < ONE ) {\n\t\tresult = f32( ONE / f32( x*x ) );\n\t\tx = f32( x + ONE );\n\t}\n\tif ( x <= TWO ) {\n\t\tresult = f32( result + f32( f32( YOFFSET12 + rateval12( x ) ) / f32( x*x ) ) );\n\t} else if ( x <= FOUR ) {\n\t\ty = f32( ONE / x );\n\t\tresult = f32( result + f32( f32( ONE + rateval24( y ) ) / x ) );\n\t} else {\n\t\ty = f32( ONE / x );\n\t\tresult = f32( result + f32( f32( ONE + rateval4INF( y ) ) / x ) );\n\t}\n\treturn result;\n}\n\n\n// EXPORTS //\n\nmodule.exports = trigammaf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the trigamma function for a single-precision floating-point number.\n*\n* @module @stdlib/math-base-special-trigammaf\n*\n* @example\n* var trigammaf = require( '@stdlib/math-base-special-trigammaf' );\n*\n* var v = trigammaf( -2.5 );\n* // returns ~9.539\n*\n* v = trigammaf( 1.0 );\n* // returns ~1.645\n*\n* v = trigammaf( 10.0 );\n* // returns ~0.105\n*\n* v = trigammaf( NaN );\n* // returns NaN\n*\n* v = trigammaf( -1.0 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_rational_p12q12", "__commonJSMin", "exports", "module", "float64ToFloat32", "evalrational", "x", "ax", "s1", "s2", "require_rational_p24q24", "__commonJSMin", "exports", "module", "float64ToFloat32", "evalrational", "x", "ax", "s1", "s2", "require_rational_p4infq4inf", "__commonJSMin", "exports", "module", "float64ToFloat32", "evalrational", "x", "ax", "s1", "s2", "require_main", "__commonJSMin", "exports", "module", "f32", "sinpif", "absf", "floorf", "PI_SQUARED", "rateval12", "rateval24", "rateval4INF", "YOFFSET12", "ZERO", "ONE", "TWO", "FOUR", "trigammaf", "x", "result", "s", "y", "z", "main"]
}
